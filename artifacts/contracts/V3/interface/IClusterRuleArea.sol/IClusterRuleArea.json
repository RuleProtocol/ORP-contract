{
  "_format": "hh-sol-artifact-1",
  "contractName": "IClusterRuleArea",
  "sourceName": "contracts/V3/interface/IClusterRuleArea.sol",
  "abi": [
    {
      "inputs": [],
      "name": "cname",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "clusterId",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "ruleSlotIndex",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "branch",
          "type": "uint8"
        }
      ],
      "name": "getGroupSlot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "found",
          "type": "bool"
        },
        {
          "components": [
            {
              "components": [
                {
                  "components": [
                    {
                      "internalType": "uint8",
                      "name": "erc",
                      "type": "uint8"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256[]",
                      "name": "valueList",
                      "type": "uint256[]"
                    }
                  ],
                  "internalType": "struct Token.TokenTemplate",
                  "name": "tokenTemplate",
                  "type": "tuple"
                },
                {
                  "internalType": "uint8",
                  "name": "rule",
                  "type": "uint8"
                },
                {
                  "internalType": "address[]",
                  "name": "ioAddressList",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "valueList",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct Rule.TokenSlot[]",
              "name": "tokenSlotList",
              "type": "tuple[]"
            },
            {
              "internalType": "uint8",
              "name": "branch",
              "type": "uint8"
            },
            {
              "internalType": "address",
              "name": "poolToken",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "handlerList",
              "type": "address[]"
            },
            {
              "internalType": "bytes[]",
              "name": "argsList",
              "type": "bytes[]"
            }
          ],
          "internalType": "struct Rule.GroupSlot",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "clusterId",
          "type": "uint32"
        },
        {
          "internalType": "uint16",
          "name": "ruleSlotIndex",
          "type": "uint16"
        },
        {
          "internalType": "uint8",
          "name": "branch",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "handler",
          "type": "address"
        }
      ],
      "name": "getGroupSlotHandlerArgs",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "linkReferences": {},
  "deployedLinkReferences": {}
}
