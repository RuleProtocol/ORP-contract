/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ClusterMountingArea,
  ClusterMountingAreaInterface,
} from "../ClusterMountingArea";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "clusterId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenMountingAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenMountingId",
        type: "uint256",
      },
    ],
    name: "checkTokenMountingExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cname",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "clusterId",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenMountingList",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Token.TokenMounting[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "clusterArea_",
        type: "address",
      },
      {
        internalType: "address",
        name: "poolContract_",
        type: "address",
      },
      {
        internalType: "address",
        name: "engine_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "clusterId",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "erc",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Token.TokenMounting",
        name: "tokenMounting",
        type: "tuple",
      },
    ],
    name: "mountToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenMountingExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenMountingList",
    outputs: [
      {
        internalType: "uint8",
        name: "erc",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "clusterId",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "erc",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct Token.TokenMounting",
        name: "tokenMounting",
        type: "tuple",
      },
    ],
    name: "unmountToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506118c7806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a45760003560e01c8063010b5603146100a957806315fb58ee146100be57806334c76b25146100f657806354fd4d501461012b578063715018a61461013a57806381c964d4146101425780638da5cb5b14610155578063908a3fca14610170578063c0c53b8b14610183578063d38c07ea14610196578063de229194146101d5578063f2fde38b146101f5575b600080fd5b6100bc6100b73660046112e0565b610208565b005b6100e16100cc3660046113bf565b606a6020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6040805180820182526013815272436c75737465724d6f756e74696e674172656160681b602082015290516100ed9190611425565b604051600181526020016100ed565b6100bc6105fb565b6100e16101503660046112e0565b61060f565b6033546040516001600160a01b0390911681526020016100ed565b6100e161017e366004611438565b610a1a565b6100bc61019136600461148d565b610a74565b6101a96101a43660046114d0565b610bcd565b6040805160ff90951685526001600160a01b0390931660208501529183015260608201526080016100ed565b6101e86101e33660046114f2565b610c20565b6040516100ed919061152e565b6100bc61020336600461159e565b610cef565b6066546001600160a01b031633146102725760405162461bcd60e51b815260206004820152602260248201527f63616c6c206d6f756e74546f6b656e2073656e646572206d75737420656e67696044820152616e6560f01b60648201526084015b60405180910390fd5b60ff841660021480610287575060ff84166003145b6102de5760405162461bcd60e51b815260206004820152602260248201527f6d6f756e74546f6b656e20706172656e74206d75737420373231206f72203131604482015261353560f01b6064820152608401610269565b805160ff16600214806102f55750805160ff166003145b6103535760405162461bcd60e51b815260206004820152602960248201527f6d6f756e74546f6b656e20746f6b656e4d6f756e74696e67206d75737420373260448201526831206f72203131353560b81b6064820152608401610269565b61038c604051806040016040528060178152602001761696969696969036b7bab73a2a37b5b2b7103a37b5b2b760491b81525084610d68565b6103c7604051806040016040528060198152602001780b4b4b4b4b4b481b5bdd5b9d151bdad95b881d1bdad95b9259603a1b81525083610db1565b6103ed60405180606001604052806025815260200161181b602591398260200151610d68565b610413604051806060016040528060228152602001611840602291398260400151610db1565b600061042a86858585602001518660400151610df6565b90506000610439878686610ea9565b6000838152606a602052604090205490915060ff1661053a5761048260405180606001604052806031815260200161172160319139600083815260696020526040902054610db1565b60008181526069602090815260408083208054600181810183559185529383902087516003909502018054888501516001600160a01b0316610100026001600160a81b031990911660ff90961695909517949094178455868201519084015560608087015160029094019390935580519283019052603080835261051c929161186290830139600083815260696020526040902054610db1565b6000828152606a60205260409020805460ff191660011790556105f1565b6000818152606960205260408120905b81548110156105ee576000828281548110610567576105676115b9565b9060005260206000209060030201905085602001516001600160a01b03168160000160019054906101000a90046001600160a01b03166001600160a01b03161480156105ba575085604001518160010154145b156105dd5785606001518160020160008282546105d791906115e5565b90915550505b506105e7816115fd565b905061054a565b50505b5050505050505050565b610603610f3a565b61060d6000610f94565b565b6066546000906001600160a01b031633146106785760405162461bcd60e51b8152602060048201526024808201527f63616c6c20756e6d6f756e74546f6b656e2073656e646572206d75737420656e60448201526367696e6560e01b6064820152608401610269565b6106b360405180604001604052806019815260200178169696969696903ab736b7bab73a2a37b5b2b7103a37b5b2b760391b81525085610d68565b6106f06040518060400160405280601b81526020017a0b4b4b4b4b4b481d5b9b5bdd5b9d151bdad95b881d1bdad95b9259602a1b81525084610db1565b610716604051806060016040528060278152602001611752602791398360200151610d68565b61073c604051806060016040528060248152602001611779602491398360400151610db1565b6000610749878686610ea9565b905061077b6040518060600160405280603381526020016117c160339139600083815260696020526040902054610db1565b6000818152606960205260408120905b8154811015610a085760008282815481106107a8576107a86115b9565b9060005260206000209060030201905085602001516001600160a01b03168160000160019054906101000a90046001600160a01b03166001600160a01b03161480156107fb575085604001518160010154145b801561080f57508560600151816002015410155b156109f7576002810154158061082c575085606001518160020154145b1561099257825460011415610880578280548061084b5761084b611618565b60008281526020812060036000199093019283020180546001600160a81b03191681556001810182905560020155905561095f565b825483906108909060019061162e565b815481106108a0576108a06115b9565b90600052602060002090600302018383815481106108c0576108c06115b9565b600091825260209091208254600390920201805460ff90921660ff1983168117825583546001600160a81b031990931617610100928390046001600160a01b031690920291909117815560018083015490820155600291820154910155825483908061092e5761092e611618565b60008281526020812060036000199093019283020180546001600160a81b0319168155600181018290556002015590555b60006109768b8a8a8a602001518b60400151610df6565b6000908152606a60205260409020805460ff19169055506109ba565b6060860151156109ba5785606001518160020160008282546109b4919061162e565b90915550505b6109ea60405180606001604052806030815260200161186260309139600086815260696020526040902054610db1565b6001945050505050610a10565b50610a01816115fd565b905061078b565b506000925050505b9695505050505050565b600080610a2a8787878787610df6565b9050610a566040518060600160405280602781526020016117f460279139610a5183610fe6565b611032565b6000908152606a602052604090205460ff1690505b95945050505050565b600054610100900460ff1615808015610a945750600054600160ff909116105b80610aae5750303b158015610aae575060005460ff166001145b610b115760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610269565b6000805460ff191660011790558015610b34576000805461ff0019166101001790555b610b3c611077565b610b4461109e565b606680546001600160a01b038085166001600160a01b0319928316179092556067805487841690831617905560688054928616929091169190911790558015610bc7576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60696020528160005260406000208181548110610be957600080fd5b600091825260209091206003909102018054600182015460029092015460ff821694506101009091046001600160a01b0316925084565b60606000610c2f858585610ea9565b9050610c5660405180606001604052806024815260200161179d60249139610a5183610fe6565b600081815260696020908152604080832080548251818502810185019093528083529193909284015b82821015610ce05760008481526020908190206040805160808101825260038602909201805460ff8116845261010090046001600160a01b031683850152600180820154928401929092526002015460608301529083529092019101610c7f565b505050509150505b9392505050565b610cf7610f3a565b6001600160a01b038116610d5c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610269565b610d6581610f94565b50565b610dad8282604051602401610d7e929190611645565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526110ce565b5050565b610dad8282604051602401610dc792919061166f565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526110ce565b600063ffffffff861615610e5c576040805163ffffffff881660208201526001600160a01b038088169282019290925260608101869052908416608082015260a0810183905260c001604051602081830303815290604052805190602001209050610a6b565b604080516001600160a01b03808816602083015291810186905290841660608201526080810183905260a00160405160208183030381529060405280519060200120905095945050505050565b600063ffffffff841615610eff576040805163ffffffff861660208201526001600160a01b0385169181019190915260608101839052608001604051602081830303815290604052805190602001209050610ce8565b604080516001600160a01b03851660208201529081018390526060016040516020818303038152906040528051906020012090509392505050565b6033546001600160a01b0316331461060d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610269565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6060610ff1826110ef565b610ffe608084901b6110ef565b60405161060f60f31b6020820152602281019290925260428201526062016040516020818303038152906040529050919050565b610dad8282604051602401611048929190611691565b60408051601f198184030181529190526020810180516001600160e01b0316634b5c427760e01b1790526110ce565b600054610100900460ff1661060d5760405162461bcd60e51b8152600401610269906116b6565b600054610100900460ff166110c55760405162461bcd60e51b8152600401610269906116b6565b61060d33610f94565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b7aff00000000000000ff00000000000000ff00000000000000ff000063ffffffff60401b604083901c90811663ffffffff60c01b84161760201c63ffffffff60601b919091166001600160e01b031984161717601081901c91821678ff00000000000000ff00000000000000ff00000000000000ff60301b821617600890811c7bff00000000000000ff00000000000000ff00000000000000ff000000939093167fff00000000000000ff00000000000000ff00000000000000ff000000000000009290921691909117919091179081901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f167f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f00600492831c161790611235827f06060606060606060606060606060606060606060606060606060606060606066115e5565b901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1660076112659190611701565b61128f827f30303030303030303030303030303030303030303030303030303030303030306115e5565b61129991906115e5565b92915050565b80356001600160a01b03811681146112b657600080fd5b919050565b803563ffffffff811681146112b657600080fd5b803560ff811681146112b657600080fd5b6000806000806000808688036101208112156112fb57600080fd5b6113048861129f565b9650611312602089016112bb565b9550611320604089016112cf565b945061132e6060890161129f565b93506080888101359350609f198201121561134857600080fd5b506040516080810181811067ffffffffffffffff8211171561137a57634e487b7160e01b600052604160045260246000fd5b60405261138960a089016112cf565b815261139760c0890161129f565b602082015260e088013560408201526101008801356060820152809150509295509295509295565b6000602082840312156113d157600080fd5b5035919050565b6000815180845260005b818110156113fe576020818501810151868301820152016113e2565b81811115611410576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610ce860208301846113d8565b600080600080600060a0868803121561145057600080fd5b611459866112bb565b94506114676020870161129f565b93506040860135925061147c6060870161129f565b949793965091946080013592915050565b6000806000606084860312156114a257600080fd5b6114ab8461129f565b92506114b96020850161129f565b91506114c76040850161129f565b90509250925092565b600080604083850312156114e357600080fd5b50508035926020909101359150565b60008060006060848603121561150757600080fd5b611510846112bb565b925061151e6020850161129f565b9150604084013590509250925092565b602080825282518282018190526000919060409081850190868401855b82811015611591578151805160ff168552868101516001600160a01b0316878601528581015186860152606090810151908501526080909301929085019060010161154b565b5091979650505050505050565b6000602082840312156115b057600080fd5b610ce88261129f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156115f8576115f86115cf565b500190565b6000600019821415611611576116116115cf565b5060010190565b634e487b7160e01b600052603160045260246000fd5b600082821015611640576116406115cf565b500390565b60408152600061165860408301856113d8565b905060018060a01b03831660208301529392505050565b60408152600061168260408301856113d8565b90508260208301529392505050565b6040815260006116a460408301856113d8565b8281036020840152610a6b81856113d8565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b600081600019048311821515161561171b5761171b6115cf565b50029056fe2d2d2d2d2d2d206d6f756e74546f6b656e20746f6b656e4d6f756e74696e674c6973742e6c656e677468206265666f72652d2d2d2d2d2d20756e6d6f756e74546f6b656e20746f6b656e4d6f756e74696e672e746f6b656e2d2d2d2d2d2d20756e6d6f756e74546f6b656e20746f6b656e4d6f756e74696e672e69642d2d2d2d2d2d2d2d2d2d2d676574546f6b656e4d6f756e74696e674c69737420686173682d2d2d2d2d2d20756e6d6f756e74546f6b656e20746f6b656e4d6f756e74696e674c6973742e6c656e677468206265666f72652d2d2d2d2d2d2d2d2d2d2d636865636b546f6b656e4d6f756e74696e67457869737420686173682d2d2d2d2d2d206d6f756e74546f6b656e20746f6b656e4d6f756e74696e672e746f6b656e2d2d2d2d2d2d206d6f756e74546f6b656e20746f6b656e4d6f756e74696e672e69642d2d2d2d2d2d206d6f756e74546f6b656e20746f6b656e4d6f756e74696e674c6973742e6c656e677468206166746572a264697066735822122066e5b632c10c6b6a36e66f0b35248d1102ba1f5a1f9681497415f52d67ffb20164736f6c63430008080033";

export class ClusterMountingArea__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ClusterMountingArea> {
    return super.deploy(overrides || {}) as Promise<ClusterMountingArea>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ClusterMountingArea {
    return super.attach(address) as ClusterMountingArea;
  }
  connect(signer: Signer): ClusterMountingArea__factory {
    return super.connect(signer) as ClusterMountingArea__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClusterMountingAreaInterface {
    return new utils.Interface(_abi) as ClusterMountingAreaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClusterMountingArea {
    return new Contract(address, _abi, signerOrProvider) as ClusterMountingArea;
  }
}
