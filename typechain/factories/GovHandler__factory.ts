/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GovHandler, GovHandlerInterface } from "../GovHandler";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "attrId",
                type: "uint32",
              },
              {
                internalType: "int40",
                name: "attrAmount",
                type: "int40",
              },
            ],
            internalType: "struct Token.AttributeIn[]",
            name: "attrInList",
            type: "tuple[]",
          },
        ],
        internalType: "struct Token.Token[]",
        name: "inTokenList",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "checkInTokenList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cname",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "clusterId",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "ruleSlotIndex",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "branch",
        type: "uint8",
      },
    ],
    name: "getRuleGroupSlotArgs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "engine",
            type: "address",
          },
          {
            internalType: "address",
            name: "clusterArea",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint16",
            name: "ruleSlotIndexInput",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "ruleSlotIndexOutput",
            type: "uint16",
          },
          {
            internalType: "uint8",
            name: "branch",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "stateCounter",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint8",
            name: "cmd",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "args",
            type: "bytes",
          },
        ],
        internalType: "struct Handler.StateParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "getState",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "clusterId",
        type: "uint32",
      },
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "uint8",
                        name: "erc",
                        type: "uint8",
                      },
                      {
                        internalType: "address",
                        name: "token",
                        type: "address",
                      },
                      {
                        internalType: "uint256[]",
                        name: "valueList",
                        type: "uint256[]",
                      },
                    ],
                    internalType: "struct Token.TokenTemplate",
                    name: "tokenTemplate",
                    type: "tuple",
                  },
                  {
                    internalType: "uint8",
                    name: "rule",
                    type: "uint8",
                  },
                  {
                    internalType: "address[]",
                    name: "ioAddressList",
                    type: "address[]",
                  },
                  {
                    internalType: "uint256[]",
                    name: "valueList",
                    type: "uint256[]",
                  },
                ],
                internalType: "struct Rule.TokenSlot[]",
                name: "tokenSlotList",
                type: "tuple[]",
              },
              {
                internalType: "uint8",
                name: "branch",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "poolToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "handlerList",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "argsList",
                type: "bytes[]",
              },
            ],
            internalType: "struct Rule.GroupSlot[]",
            name: "groupSlotList",
            type: "tuple[]",
          },
          {
            internalType: "uint8[]",
            name: "ruleSlotBound",
            type: "uint8[]",
          },
          {
            components: [
              {
                internalType: "uint16",
                name: "ruleSlotIndexInput",
                type: "uint16",
              },
              {
                internalType: "uint16",
                name: "ruleSlotIndexOutput",
                type: "uint16",
              },
              {
                internalType: "uint8",
                name: "state",
                type: "uint8",
              },
              {
                internalType: "uint32",
                name: "totalCount",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "durationType",
                type: "uint8",
              },
              {
                internalType: "uint32",
                name: "delayTimestamp",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "delayBlockNumber",
                type: "uint32",
              },
              {
                internalType: "uint64",
                name: "handlerCount",
                type: "uint64",
              },
              {
                internalType: "address[]",
                name: "handlerList",
                type: "address[]",
              },
              {
                internalType: "bytes[]",
                name: "handlerArgsList",
                type: "bytes[]",
              },
              {
                internalType: "address",
                name: "snippet",
                type: "address",
              },
            ],
            internalType: "struct Rule.Rule[]",
            name: "ruleList",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "attrId",
                type: "uint32",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "symbol",
                type: "string",
              },
              {
                internalType: "string",
                name: "uri",
                type: "string",
              },
              {
                internalType: "uint8",
                name: "level",
                type: "uint8",
              },
            ],
            internalType: "struct Cluster.Attribute[]",
            name: "attrList",
            type: "tuple[]",
          },
          {
            internalType: "uint8[]",
            name: "attrStateList",
            type: "uint8[]",
          },
          {
            internalType: "address[]",
            name: "deployerList",
            type: "address[]",
          },
          {
            internalType: "address[]",
            name: "adminList",
            type: "address[]",
          },
          {
            internalType: "uint32",
            name: "delayTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "delayBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "state",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct Cluster.Cluster",
        name: "cluster",
        type: "tuple",
      },
    ],
    name: "regRule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "clusterId",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "ruleSlotIndex",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "branch",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "regRuleGroupSlotArgs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "ruleGroupSlotArgs",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tokenUsed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "clusterId",
        type: "uint32",
      },
      {
        internalType: "uint16",
        name: "ruleSlotIndexInput",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "ruleSlotIndexOutput",
        type: "uint16",
      },
      {
        internalType: "uint8",
        name: "cmd",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "updateArgs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612994806100206000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806334c76b2514610093578063394a7398146100cb57806354fd4d50146100de5780635790c294146100ed5780636dabaf04146101025780638f74d9b31461012b578063a903620c1461014e578063af84b51f14610160578063d0d35b5514610180578063fff1bf7414610193575b600080fd5b60408051808201909152600a81526923b7bb2430b7323632b960b11b60208201525b6040516100c2919061255b565b60405180910390f35b6100b56100d9366004612037565b6101a6565b604051600081526020016100c2565b6101006100fb3660046123e2565b610240565b005b61011b610110366004612320565b600195945050505050565b60405190151581526020016100c2565b61011b610139366004612037565b60026020526000908152604090205460ff1681565b61010061015c36600461216d565b5050565b61017361016e366004612050565b610418565b6040516100c291906124f9565b6100b561018e36600461239f565b610620565b61011b6101a1366004611e4d565b6107e9565b600160205260009081526040902080546101bf9061282e565b80601f01602080910402602001604051908101604052809291908181526020018280546101eb9061282e565b80156102385780601f1061020d57610100808354040283529160200191610238565b820191906000526020600020905b81548152906001019060200180831161021b57829003601f168201915b505050505081565b61026160405180606001604052806026815260200161293960269139610a8b565b61028d6040518060400160405280600b81526020016a0c2e4cee640d8cadccee8d60ab1b815250610a8b565b6102bb6040518060400160405280600b81526020016a0c2e4cee640d8cadccee8d60ab1b8152508251610ad1565b6000338585856040516020016102d494939291906124c6565b60408051601f198184030181529190528051602090910120905060006102fa8382610b16565b90506000610309846001610b16565b90506000610318856002610b16565b905061034d6040518060400160405280600d81526020016c39bab1b1b2b2b22330b1ba37b960991b8152508461ffff16610ad1565b6103796040518060400160405280600681526020016571756f72756d60d01b8152508361ffff16610ad1565b6103a86040518060400160405280600981526020016871756f72756d4f6e6560b81b8152508261ffff16610ad1565b6103cd6040518060600160405280602a815260200161290f602a91398760ff16610ad1565b600084815260016020908152604090912086516103ec928801906115c1565b5061040e6040518060600160405280602481526020016128eb60249139610a8b565b5050505050505050565b60606104496040518060400160405280600e81526020016d33b2ba29ba30ba32903132b3b4b760911b815250610a8b565b61014082015160009061045c9082610b7b565b905061048c6040518060400160405280600c81526020016b33b2ba29ba30ba329033b7bb60a11b81525082610bc6565b6101408301516000906104a0906001610b7b565b90506104d26040518060400160405280600e81526020016d33b2ba29ba30ba32903a37b5b2b760911b81525082610bc6565b6101408401516000906104e6906002610b16565b90506105156040518060400160405280600b81526020016a19d95d14dd185d19481a5960aa1b81525082610ad1565b610140850151600090610529906003610b16565b90506105606040518060400160405280601381526020017219d95d14dd185d19481c1c9bdc1bdcd85b1259606a1b81525082610ad1565b600084848484604051602001610579949392919061249d565b60408051808303601f1901815282825280516020909101206001808452838301909252925060009190816020015b60608152602001906001900390816105a757505060408051808201825260048152631d5cd95960e21b6020808301919091526000868152600290915291909120549192506105f79160ff16610c0b565b8160008151811061060a5761060a6128be565b6020908102919091010152979650505050505050565b606060003385858560405160200161063b94939291906124c6565b60405160208183030381529060405280519060200120905060006001600083815260200190815260200160002080546106739061282e565b80601f016020809104026020016040519081016040528092919081815260200182805461069f9061282e565b80156106ec5780601f106106c1576101008083540402835291602001916106ec565b820191906000526020600020905b8154815290600101906020018083116106cf57829003601f168201915b505050505090506000610709600083610b1690919063ffffffff16565b90506000610718836001610b16565b90506000610727846002610b16565b905061075c6040518060400160405280600d81526020016c39bab1b1b2b2b22330b1ba37b960991b8152508461ffff16610ad1565b6107886040518060400160405280600681526020016571756f72756d60d01b8152508361ffff16610ad1565b6107b76040518060400160405280600981526020016871756f72756d4f6e6560b81b8152508261ffff16610ad1565b6107dc6040518060600160405280602a815260200161290f602a91398860ff16610ad1565b5091979650505050505050565b60006108226040518060400160405280601681526020017531b432b1b5a4b72a37b5b2b72634b9ba103132b3b4b760511b815250610a8b565b61084e6040518060400160405280600a81526020016936b9b39739b2b73232b960b11b81525033610bc6565b61087a6040518060400160405280600a8152602001691c1c9bdc1bdcd85b125960b21b81525083610ad1565b60005b8351811015610a4b57600260ff1684828151811061089d5761089d6128be565b60200260200101516000015160ff1614806108db5750600360ff168482815181106108ca576108ca6128be565b60200260200101516000015160ff16145b15610a3957610924604051806040016040528060058152602001643a37b5b2b760d91b815250858381518110610913576109136128be565b602002602001015160200151610bc6565b610965604051806040016040528060028152602001611a5960f21b815250858381518110610954576109546128be565b602002602001015160400151610ad1565b60003385838151811061097a5761097a6128be565b602002602001015160200151868481518110610998576109986128be565b602002602001015160400151866040516020016109b8949392919061249d565b60408051601f1981840301815291815281516020928301206000818152600290935291205490915060ff1615610a1f57610a146040518060400160405280600a8152602001691a5b99195e081d5cd95960b21b81525083610ad1565b600092505050610a85565b6000908152600260205260409020805460ff191660011790555b80610a4381612863565b91505061087d565b50610a816040518060400160405280601481526020017318da1958dad25b951bdad95b931a5cdd08195b9960621b815250610a8b565b5060015b92915050565b610ace81604051602401610a9f919061255b565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610cec565b50565b61015c8282604051602401610ae7929190612598565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b179052610cec565b600080610b2a610b2585610cf5565b610d22565b9050610b73610b54828560ff1681518110610b4757610b476128be565b6020026020010151610d22565b600281518110610b6657610b666128be565b6020026020010151610e37565b949350505050565b600080610b8a610b2585610cf5565b9050610b73610ba7828560ff1681518110610b4757610b476128be565b600281518110610bb957610bb96128be565b6020026020010151610e84565b61015c8282604051602401610bdc92919061256e565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610cec565b60606000610c1884610e9e565b90506000610c2584610ea9565b6040805160038082526080820190925291925060009190816020015b6060815260200190600190039081610c415790505090508281600081518110610c6c57610c6c6128be565b6020026020010181905250610c9c60405180604001604052806004815260200163189bdbdb60e21b815250610e9e565b81600181518110610caf57610caf6128be565b60200260200101819052508181600281518110610cce57610cce6128be565b6020026020010181905250610ce281610f13565b9695505050505050565b610ace81610f3e565b60408051808201825260008082526020918201528151808301909252825182529182019181019190915290565b6060610d2d82610f5f565b610d3657600080fd5b6000610d4183610f98565b90506000816001600160401b03811115610d5d57610d5d6128d4565b604051908082528060200260200182016040528015610da257816020015b6040805180820190915260008082526020820152815260200190600190039081610d7b5790505b5090506000610db4856020015161101b565b8560200151610dc391906126be565b90506000805b84811015610e2c57610dda8361109c565b9150604051806040016040528083815260200184815250848281518110610e0357610e036128be565b6020908102919091010152610e1882846126be565b925080610e2481612863565b915050610dc9565b509195945050505050565b805160009015801590610e4c57508151602110155b610e5557600080fd5b600080610e6184611145565b815191935091506020821015610b735760208290036101000a9004949350505050565b8051600090601514610e9557600080fd5b610a8582610e37565b6060610a858261118c565b6040805160018082528183019092526060916000919060208201818036833701905050905082610edd57600160ff1b610ee3565b600160f81b5b81600081518110610ef657610ef66128be565b60200101906001600160f81b031916908160001a90535092915050565b60606000610f20836111dc565b9050610f37610f31825160c0611316565b826114cc565b9392505050565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b8051600090610f7057506000919050565b6020820151805160001a9060c0821015610f8e575060009392505050565b5060019392505050565b8051600090610fa957506000919050565b600080610fb9846020015161101b565b8460200151610fc891906126be565b9050600084600001518560200151610fe091906126be565b90505b8082101561101257610ff48261109c565b610ffe90836126be565b91508261100a81612863565b935050610fe3565b50909392505050565b8051600090811a60808110156110345750600092915050565b60b881108061104f575060c0811080159061104f575060f881105b1561105d5750600192915050565b60c081101561108a57611072600160b861280b565b61107f9060ff16826127f4565b610f379060016126be565b611072600160f861280b565b50919050565b80516000908190811a60808110156110b7576001915061113e565b60b88110156110dd576110cb6080826127f4565b6110d69060016126be565b915061113e565b60c081101561110a5760b78103600185019450806020036101000a8551046001820181019350505061113e565b60f881101561111e576110cb60c0826127f4565b60f78103600185019450806020036101000a855104600182018101935050505b5092915050565b6000806000611157846020015161101b565b9050600081856020015161116b91906126be565b9050600082866000015161117f91906127f4565b9196919550909350505050565b606080825160011480156111bb57506080836000815181106111b0576111b06128be565b016020015160f81c11155b156111c7575081610a85565b610f376111d684516080611316565b846114cc565b60608151600014156111fe57604080516000808252602082019092529061113e565b6000805b83518110156112455783818151811061121d5761121d6128be565b6020026020010151518261123191906126be565b91508061123d81612863565b915050611202565b6000826001600160401b0381111561125f5761125f6128d4565b6040519080825280601f01601f191660200182016040528015611289576020820181803683370190505b50600092509050602081015b855183101561130d5760008684815181106112b2576112b26128be565b6020026020010151905060006020820190506112d083828451611549565b8785815181106112e2576112e26128be565b602002602001015151836112f691906126be565b92505050828061130590612863565b935050611295565b50949350505050565b6060806038841015611380576040805160018082528183019092529060208201818036833701905050905061134b83856126be565b601f1a60f81b81600081518110611364576113646128be565b60200101906001600160f81b031916908160001a905350610f37565b600060015b61138f81876126d6565b156113b5578161139e81612863565b92506113ae9050610100826127d5565b9050611385565b6113c08260016126be565b6001600160401b038111156113d7576113d76128d4565b6040519080825280601f01601f191660200182016040528015611401576020820181803683370190505b50925061140e85836126be565b6114199060376126be565b601f1a60f81b83600081518110611432576114326128be565b60200101906001600160f81b031916908160001a905350600190505b8181116114c35761010061146282846127f4565b61146e9061010061272d565b61147890886126d6565b611482919061287e565b601f1a60f81b83828151811061149a5761149a6128be565b60200101906001600160f81b031916908160001a905350806114bb81612863565b91505061144e565b50509392505050565b6060806040519050835180825260208201818101602087015b818310156114fd5780518352602092830192016114e5565b50855184518101855292509050808201602086015b8183101561152a578051835260209283019201611512565b508651929092011591909101601f01601f191660405250905092915050565b8282825b6020811061158557815183526115646020846126be565b92506115716020836126be565b915061157e6020826127f4565b905061154d565b600060016115948360206127f4565b6115a09061010061272d565b6115aa91906127f4565b925184518416931916929092179092525050505050565b8280546115cd9061282e565b90600052602060002090601f0160209004810192826115ef5760008555611635565b82601f1061160857805160ff1916838001178555611635565b82800160010185558215611635579182015b8281111561163557825182559160200191906001019061161a565b50611641929150611645565b5090565b5b808211156116415760008155600101611646565b80356001600160a01b038116811461167157600080fd5b919050565b600082601f83011261168757600080fd5b8135602061169c6116978361269b565b61266b565b80838252828201915082860187848660051b89010111156116bc57600080fd5b60005b858110156116e2576116d08261165a565b845292840192908401906001016116bf565b5090979650505050505050565b600082601f83011261170057600080fd5b813560206117106116978361269b565b80838252828201915082860187848660051b890101111561173057600080fd5b6000805b868110156117725782356001600160401b03811115611751578283fd5b61175f8b88838d0101611d90565b8652509385019391850191600101611734565b509198975050505050505050565b600082601f83011261179157600080fd5b813560206117a16116978361269b565b80838252828201915082860187848660051b89010111156117c157600080fd5b60005b858110156116e25781356001600160401b03808211156117e357600080fd5b9089019060a0828c03601f19018113156117fc57600080fd5b6118046125ba565b61180f898501611e11565b81526040808501358481111561182457600080fd5b6118328f8c83890101611d90565b8b8401525060608501358481111561184957600080fd5b6118578f8c83890101611d90565b82840152505060808401358381111561186f57600080fd5b61187d8e8b83880101611d90565b60608301525061188e828501611e3c565b6080820152875250505092840192908401906001016117c4565b600082601f8301126118b957600080fd5b813560206118c96116978361269b565b80838252828201915082860187848660051b89010111156118e957600080fd5b60005b858110156116e25781356001600160401b038082111561190b57600080fd5b9089019060a0828c03601f190181131561192457600080fd5b61192c6125ba565b888401358381111561193d57600080fd5b61194b8e8b83880101611b4f565b825250604061195b818601611e3c565b8a830152606061196c81870161165a565b82840152608086013591508482111561198457600080fd5b6119928f8c84890101611676565b90830152509083013590828211156119a957600080fd5b6119b78d8a848701016116ef565b6080820152875250505092840192908401906001016118ec565b600082601f8301126119e257600080fd5b813560206119f26116978361269b565b80838252828201915082860187848660051b8901011115611a1257600080fd5b60005b858110156116e25781356001600160401b0380821115611a3457600080fd5b90890190610160828c03601f1901811315611a4e57600080fd5b611a566125e2565b611a61898501611dff565b8152611a6f60408501611dff565b89820152611a7f60608501611e3c565b6040820152611a9060808501611e11565b6060820152611aa160a08501611e3c565b6080820152611ab260c08501611e11565b60a0820152611ac360e08501611e11565b60c0820152611ad56101008501611e25565b60e082015261012084013583811115611aed57600080fd5b611afb8e8b83880101611676565b610100830152506101408085013584811115611b1657600080fd5b611b248f8c838901016116ef565b61012084015250611b3683860161165a565b9082015287525050509284019290840190600101611a15565b600082601f830112611b6057600080fd5b6020611b6f611697843561269b565b808435825282820191508285018684873560051b8801011115611b9157600080fd5b60005b8635811015611cbd576001600160401b038083351115611bb357600080fd5b82358801601f196080828c0382011215611bcc57600080fd5b611bd4612605565b8883013584811115611be557600080fd5b83016060818e0384011215611bf957600080fd5b611c01612627565b9250611c0e8a8201611e3c565b8352611c1c6040820161165a565b8a840152606081013585811115611c3257600080fd5b611c408e8c83850101611cc9565b60408501525050818152611c5660408401611e3c565b898201526060830135915083821115611c6e57600080fd5b611c7c8c8a84860101611676565b60408201526080830135915083821115611c9557600080fd5b611ca38c8a84860101611cc9565b606082015287525050509284019290840190600101611b94565b50909695505050505050565b600082601f830112611cda57600080fd5b81356020611cea6116978361269b565b80838252828201915082860187848660051b8901011115611d0a57600080fd5b60005b858110156116e257813584529284019290840190600101611d0d565b600082601f830112611d3a57600080fd5b81356020611d4a6116978361269b565b80838252828201915082860187848660051b8901011115611d6a57600080fd5b60005b858110156116e257611d7e82611e3c565b84529284019290840190600101611d6d565b600082601f830112611da157600080fd5b81356001600160401b03811115611dba57611dba6128d4565b611dcd601f8201601f191660200161266b565b818152846020838601011115611de257600080fd5b816020850160208301376000918101602001919091529392505050565b803561ffff8116811461167157600080fd5b803563ffffffff8116811461167157600080fd5b80356001600160401b038116811461167157600080fd5b803560ff8116811461167157600080fd5b60008060408385031215611e6057600080fd5b6001600160401b0383351115611e7557600080fd5b83601f843585010112611e8757600080fd5b611e97611697843585013561269b565b833584018035808352602080840193928181019260051b0101871015611ebc57600080fd5b60005b8635870135811015612025576001600160401b0382351115611ee057600080fd5b8635870182350160a0818a03601f19011215611efb57600080fd5b611f036125ba565b611f0f60208301611e3c565b8152611f1d6040830161165a565b602082015260608201356040820152608082013560608201526001600160401b0360a08301351115611f4e57600080fd5b89603f60a084013584010112611f6357600080fd5b602060a083013583010135611f7a6116978261269b565b818152602081019060a08501358501604081810191600686901b01018e1015611fa257600080fd5b600095505b83861015612007576040818f031215611fbf57600080fd5b611fc7612649565b611fd082611e11565b81526020820135600481900b14611fe657600080fd5b60208281013582820152908452600196909601959290920191604001611fa7565b50608084015250508552506020938401939190910190600101611ebf565b50909660209590950135955050505050565b60006020828403121561204957600080fd5b5035919050565b60006020828403121561206257600080fd5b81356001600160401b038082111561207957600080fd5b90830190610160828603121561208e57600080fd5b6120966125e2565b61209f8361165a565b81526120ad6020840161165a565b60208201526120be60408401611e11565b60408201526120cf60608401611dff565b60608201526120e060808401611dff565b60808201526120f160a08401611e3c565b60a082015261210260c0840161165a565b60c082015261211360e08401611e11565b60e082015261010061212681850161165a565b90820152610120612138848201611e3c565b90820152610140838101358381111561215057600080fd5b61215c88828701611d90565b918301919091525095945050505050565b6000806040838503121561218057600080fd5b61218983611e11565b915060208301356001600160401b03808211156121a557600080fd5b9084019061016082870312156121ba57600080fd5b6121c26125e2565b8235828111156121d157600080fd5b6121dd888286016118a8565b8252506020830135828111156121f257600080fd5b6121fe88828601611d29565b60208301525060408301358281111561221657600080fd5b612222888286016119d1565b60408301525060608301358281111561223a57600080fd5b61224688828601611780565b60608301525060808301358281111561225e57600080fd5b61226a88828601611d29565b60808301525060a08301358281111561228257600080fd5b61228e88828601611676565b60a08301525060c0830135828111156122a657600080fd5b6122b288828601611676565b60c0830152506122c460e08401611e11565b60e08201526101006122d7818501611e11565b908201526101206122e9848201611e3c565b90820152610140838101358381111561230157600080fd5b61230d89828701611d90565b8284015250508093505050509250929050565b600080600080600060a0868803121561233857600080fd5b61234186611e11565b945061234f60208701611dff565b935061235d60408701611dff565b925061236b60608701611e3c565b915060808601356001600160401b0381111561238657600080fd5b61239288828901611d90565b9150509295509295909350565b6000806000606084860312156123b457600080fd5b6123bd84611e11565b92506123cb60208501611dff565b91506123d960408501611e3c565b90509250925092565b600080600080608085870312156123f857600080fd5b61240185611e11565b935061240f60208601611dff565b925061241d60408601611e3c565b915060608501356001600160401b0381111561243857600080fd5b61244487828801611d90565b91505092959194509250565b6000815180845260005b818110156124765760208185018101518683018201520161245a565b81811115612488576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b0394909416845263ffffffff92909216602084015261ffff16604083015260ff16606082015260800190565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561254e57603f1988860301845261253c858351612450565b94509285019290850190600101612520565b5092979650505050505050565b602081526000610f376020830184612450565b6040815260006125816040830185612450565b905060018060a01b03831660208301529392505050565b6040815260006125ab6040830185612450565b90508260208301529392505050565b60405160a081016001600160401b03811182821017156125dc576125dc6128d4565b60405290565b60405161016081016001600160401b03811182821017156125dc576125dc6128d4565b604051608081016001600160401b03811182821017156125dc576125dc6128d4565b604051606081016001600160401b03811182821017156125dc576125dc6128d4565b604080519081016001600160401b03811182821017156125dc576125dc6128d4565b604051601f8201601f191681016001600160401b0381118282101715612693576126936128d4565b604052919050565b60006001600160401b038211156126b4576126b46128d4565b5060051b60200190565b600082198211156126d1576126d1612892565b500190565b6000826126e5576126e56128a8565b500490565b600181815b8085111561272557816000190482111561270b5761270b612892565b8085161561271857918102915b93841c93908002906126ef565b509250929050565b6000610f37838360008261274357506001610a85565b8161275057506000610a85565b816001811461276657600281146127705761278c565b6001915050610a85565b60ff84111561278157612781612892565b50506001821b610a85565b5060208310610133831016604e8410600b84101617156127af575081810a610a85565b6127b983836126ea565b80600019048211156127cd576127cd612892565b029392505050565b60008160001904831182151516156127ef576127ef612892565b500290565b60008282101561280657612806612892565b500390565b600060ff821660ff84168082101561282557612825612892565b90039392505050565b600181811c9082168061284257607f821691505b6020821081141561109657634e487b7160e01b600052602260045260246000fd5b600060001982141561287757612877612892565b5060010190565b60008261288d5761288d6128a8565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfe676f762068616e646c65722072656752756c6547726f7570536c6f744172677320656e642d2d2d2d2d2d2d2d2d2d2d476f762072656752756c6547726f7570536c6f7441726773206272616e6368676f762068616e646c65722072656752756c6547726f7570536c6f744172677320626567696ea26469706673582212209e00ac382b71917687466278085dee84f7c5ffb893179867cebcbe74dd98a90864736f6c63430008070033";

export class GovHandler__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GovHandler> {
    return super.deploy(overrides || {}) as Promise<GovHandler>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): GovHandler {
    return super.attach(address) as GovHandler;
  }
  connect(signer: Signer): GovHandler__factory {
    return super.connect(signer) as GovHandler__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GovHandlerInterface {
    return new utils.Interface(_abi) as GovHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GovHandler {
    return new Contract(address, _abi, signerOrProvider) as GovHandler;
  }
}
