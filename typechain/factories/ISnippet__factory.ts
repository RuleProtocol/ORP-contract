/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ISnippet, ISnippetInterface } from "../ISnippet";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "inBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "inTokenSlotIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "attrId",
                    type: "uint32",
                  },
                  {
                    internalType: "int40",
                    name: "attrAmount",
                    type: "int40",
                  },
                ],
                internalType: "struct Attribute.AttributeIn[]",
                name: "attrInList",
                type: "tuple[]",
              },
            ],
            internalType: "struct Token.Token",
            name: "inToken",
            type: "tuple",
          },
        ],
        internalType: "struct ISnippet.PreInputTokenParams",
        name: "preInputToken",
        type: "tuple",
      },
    ],
    name: "preInputToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "attrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrOpt",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attrType",
                type: "uint8",
              },
              {
                internalType: "int40",
                name: "attrAmount",
                type: "int40",
              },
              {
                internalType: "string",
                name: "attrText",
                type: "string",
              },
              {
                internalType: "uint32",
                name: "parentAttrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrState",
                type: "uint8",
              },
              {
                internalType: "bytes4",
                name: "attrFormula",
                type: "bytes4",
              },
            ],
            internalType: "struct Attribute.AttributeOpt[]",
            name: "attributeOptList",
            type: "tuple[]",
          },
        ],
        internalType: "struct ISnippet.TokenSnippet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "inBranch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "inRound",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
        ],
        internalType: "struct ISnippet.ExecuteDelayParams",
        name: "executeDelay",
        type: "tuple",
      },
    ],
    name: "processExecuteDelayTime",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "inBranch",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "inRound",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "ruleDurationType",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "ruleDelayTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "ruleDelayBlockNumber",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "delayTimestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "delayBlockNumber",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "attrId",
                    type: "uint32",
                  },
                  {
                    internalType: "int40",
                    name: "attrAmount",
                    type: "int40",
                  },
                ],
                internalType: "struct Attribute.AttributeIn[]",
                name: "attrInList",
                type: "tuple[]",
              },
            ],
            internalType: "struct Token.Token[]",
            name: "inTokenList",
            type: "tuple[]",
          },
        ],
        internalType: "struct ISnippet.InitDelayParams",
        name: "initDelay",
        type: "tuple",
      },
    ],
    name: "processInitDelayTime",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "outBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "inTokenSlotIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "attrId",
                    type: "uint32",
                  },
                  {
                    internalType: "int40",
                    name: "attrAmount",
                    type: "int40",
                  },
                ],
                internalType: "struct Attribute.AttributeIn[]",
                name: "attrInList",
                type: "tuple[]",
              },
            ],
            internalType: "struct Token.Token",
            name: "inToken",
            type: "tuple",
          },
        ],
        internalType: "struct ISnippet.InputTokenParams",
        name: "inputToken",
        type: "tuple",
      },
    ],
    name: "processInputToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "attrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrOpt",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attrType",
                type: "uint8",
              },
              {
                internalType: "int40",
                name: "attrAmount",
                type: "int40",
              },
              {
                internalType: "string",
                name: "attrText",
                type: "string",
              },
              {
                internalType: "uint32",
                name: "parentAttrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrState",
                type: "uint8",
              },
              {
                internalType: "bytes4",
                name: "attrFormula",
                type: "bytes4",
              },
            ],
            internalType: "struct Attribute.AttributeOpt[]",
            name: "attributeOptList",
            type: "tuple[]",
          },
        ],
        internalType: "struct ISnippet.TokenSnippet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "outBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "random",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "tokenSlotIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct ISnippet.TokenSlotDelayParams",
        name: "tokenSlotDelay",
        type: "tuple",
      },
    ],
    name: "processInputTokenSlotDelayTime",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "outBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "random",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "outTokenSlotIndex",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint8",
                name: "erc",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "id",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint32",
                    name: "attrId",
                    type: "uint32",
                  },
                  {
                    internalType: "int40",
                    name: "attrAmount",
                    type: "int40",
                  },
                ],
                internalType: "struct Attribute.AttributeIn[]",
                name: "attrInList",
                type: "tuple[]",
              },
            ],
            internalType: "struct Token.Token",
            name: "outToken",
            type: "tuple",
          },
        ],
        internalType: "struct ISnippet.OutputTokenParams",
        name: "outputToken",
        type: "tuple",
      },
    ],
    name: "processOutputToken",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "attrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrOpt",
                type: "uint8",
              },
              {
                internalType: "uint8",
                name: "attrType",
                type: "uint8",
              },
              {
                internalType: "int40",
                name: "attrAmount",
                type: "int40",
              },
              {
                internalType: "string",
                name: "attrText",
                type: "string",
              },
              {
                internalType: "uint32",
                name: "parentAttrId",
                type: "uint32",
              },
              {
                internalType: "uint8",
                name: "attrState",
                type: "uint8",
              },
              {
                internalType: "bytes4",
                name: "attrFormula",
                type: "bytes4",
              },
            ],
            internalType: "struct Attribute.AttributeOpt[]",
            name: "attributeOptList",
            type: "tuple[]",
          },
        ],
        internalType: "struct ISnippet.TokenSnippet",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "caller",
            type: "address",
          },
          {
            internalType: "uint32",
            name: "clusterId",
            type: "uint32",
          },
          {
            internalType: "uint8",
            name: "outBranch",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "taskId",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "random",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "tokenSlotIndex",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "erc",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
        ],
        internalType: "struct ISnippet.TokenSlotDelayParams",
        name: "tokenSlotDelay",
        type: "tuple",
      },
    ],
    name: "processOutputTokenSlotDelayTime",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISnippet__factory {
  static readonly abi = _abi;
  static createInterface(): ISnippetInterface {
    return new utils.Interface(_abi) as ISnippetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISnippet {
    return new Contract(address, _abi, signerOrProvider) as ISnippet;
  }
}
