/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PoolContract, PoolContractInterface } from "../PoolContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deployerNonce",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "EventDeployer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deployerNonce",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "EventDeployerExist",
    type: "event",
  },
  {
    inputs: [],
    name: "cname",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "isContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_deployer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "regDeployer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630ac4ee6b1461005c578063162790551461008c57806334c76b25146100b057806354fd4d50146100de578063b9caf9d9146100ed575b600080fd5b61006f61006a366004610551565b610116565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a061009a36600461057b565b3b151590565b6040519015158152602001610083565b604080518082018252600c81526b141bdbdb10dbdb9d1c9858dd60a21b6020820152905161008391906105ea565b60405160018152602001610083565b61006f6100fb36600461057b565b6000602081905290815260409020546001600160a01b031681565b6000806101238484610290565b90506101476040518060600160405280602181526020016106a4602191398561047e565b6101866040518060400160405280601e81526020017f2d2d2d2d2d2d2d2d2d2d2d2d207265674465706c6f796572206e6f6e63650000815250846104c7565b6101a8604051806060016040528060218152602001610683602191398261047e565b6001600160a01b038181166000908152602081905260409020541661022f576001600160a01b038181166000818152602081815260409182902080546001600160a01b03191694891694851790559051868152339392917f6eb7bc3a132b46345ead8c6b739705a35a378eca99c4773ff02a25e4a7c3c7a4910160405180910390a4610287565b336001600160a01b0316846001600160a01b0316826001600160a01b03167fbe37e015f7bca8b88e2b1afd95da93cf56f52e5f697f60e0dcbd37b2bd995efa8660405161027e91815260200190565b60405180910390a45b90505b92915050565b6000816102da576040516102ba90606b60f91b90602560fa1b908690600160ff1b906020016105fd565b6040516020818303038152906040528051906020012060001c905061028a565b607f8211610305576040516102ba90606b60f91b90602560fa1b90869060f887901b906020016105fd565b60ff821161035e5760405160d760f81b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152608160f81b603682015260f883901b6001600160f81b03191660378201526038016102ba565b61ffff82116103b857604051601b60fb1b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152604160f91b60368201526001600160f01b031960f084901b1660378201526039016102ba565b62ffffff82116104135760405160d960f81b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152608360f81b60368201526001600160e81b031960e884901b166037820152603a016102ba565b604051606d60f91b6020820152602560fa1b60218201526001600160601b0319606085901b166022820152602160fa1b60368201526001600160e01b031960e084901b166037820152603b0160408051601f1981840301815291905280516020909101209392505050565b6104c38282604051602401610494929190610636565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052610508565b5050565b6104c382826040516024016104dd929190610660565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790525b61051181610514565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b80356001600160a01b038116811461054c57600080fd5b919050565b6000806040838503121561056457600080fd5b61056d83610535565b946020939093013593505050565b60006020828403121561058d57600080fd5b61059682610535565b9392505050565b6000815180845260005b818110156105c3576020818501810151868301820152016105a7565b818111156105d5576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610596602083018461059d565b6001600160f81b03199485168152928416600184015260609190911b6001600160601b0319166002830152909116601682015260170190565b604081526000610649604083018561059d565b905060018060a01b03831660208301529392505050565b604081526000610673604083018561059d565b9050826020830152939250505056fe2d2d2d2d2d2d2d2d2d2d2d2d207265674465706c6f79657220636f6e74726163742d2d2d2d2d2d2d2d2d2d2d2d207265674465706c6f796572206465706c6f796572a2646970667358221220691f7c29af94cec3fc0a9c72900f88fd38b585a16a90945a4014f3da7ef76ac964736f6c63430008080033";

export class PoolContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PoolContract> {
    return super.deploy(overrides || {}) as Promise<PoolContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PoolContract {
    return super.attach(address) as PoolContract;
  }
  connect(signer: Signer): PoolContract__factory {
    return super.connect(signer) as PoolContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PoolContractInterface {
    return new utils.Interface(_abi) as PoolContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PoolContract {
    return new Contract(address, _abi, signerOrProvider) as PoolContract;
  }
}
